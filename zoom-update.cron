#!/bin/bash

ZOOM_CACHE=/var/lib/zoom
ZOOM_REPO=${ZOOM_CACHE}/repo
ZOOM_KEYRING=${ZOOM_CACHE}/gpg.keyring
VERSION_FILE=${ZOOM_CACHE}/zoom_deb.version

# s. https://zoom.us/download?os=linux
ZOOM_CLIENT_URL="https://zoom.us/client/latest/zoom_amd64.deb"
ZOOM_PUBKEY_URL="https://zoom.us/linux/download/pubkey?version=5-12-6"


function get_latest_zoom()
{
	wget --spider "${ZOOM_CLIENT_URL}" 2>&1 | grep ^Location: | sed -e 's/.*prod\/\(.*\)\/.*/\1/'
}

function get_pubkey()
{
	wget -q -O "${ZOOM_CACHE}/zoom.key.new" "${ZOOM_PUBKEY_URL}" 2>&1
	if [ -r "${ZOOM_CACHE}/zoom.key" ]; then
		if ! cmp -s "${ZOOM_CACHE}/zoom.key.new" "${ZOOM_CACHE}/zoom.key"; then
			echo "Keys ${ZOOM_CACHE}/{zoom.key|zoom.key.new} differ - aborting"
			exit 1
		fi
	else
		echo "Initially importing GPG key"
		gpg --no-default-keyring --keyring "${ZOOM_KEYRING}" --homedir "${ZOOM_CACHE}" --import "${ZOOM_CACHE}/zoom.key.new"
		mv "${ZOOM_CACHE}/zoom.key.new" "${ZOOM_CACHE}/zoom.key"
	fi
}

get_pubkey

if [ -f "$VERSION_FILE" ]; then
	OLD_ZOOM_VER=$(tail -n 1 "$VERSION_FILE")
else
	OLD_ZOOM_VER="0.0"
fi
LATEST_ZOOM_VER=$(get_latest_zoom)

if [ "x$LATEST_ZOOM_VER" == "x" ]; then
	echo "ERROR: Unable to determine zoom version"
elif [ ! -f "$VERSION_FILE" ] || ! grep -q "^$LATEST_ZOOM_VER\$" "$VERSION_FILE"; then
	echo "New version found: $LATEST_ZOOM_VER"
	echo "$LATEST_ZOOM_VER" >> "$VERSION_FILE"
	wget --quiet -O "${ZOOM_REPO}/zoom_amd64_${LATEST_ZOOM_VER}.deb" "${ZOOM_CLIENT_URL}"
	gpg --no-default-keyring --keyring "${ZOOM_KEYRING}" --homedir "${ZOOM_CACHE}" --verify "${ZOOM_REPO}/zoom_amd64_${LATEST_ZOOM_VER}.deb" || exit 2
	dpkg-scanpackages --multiversion ${ZOOM_REPO}/ ${ZOOM_CACHE}/override > ${ZOOM_REPO}/Release
	dpkg-scanpackages --multiversion ${ZOOM_REPO} |  gzip -9c > ${ZOOM_REPO}/Packages.gz
fi

